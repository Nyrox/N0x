program: (funcdecl)*
expression: term ((+ | -) term)*
term: factor ((* | /) factor)*
factor: func | var | INTEGER | (expression) | (- | +)factor

var: IDENTIFIER
func: IDENTIFIER()
vardecl: int IDENTIFIER (= expression)?
funcdecl: func IDENTIFIER() { (expression)* }

program: (funcdecl)*
funcdecl: func IDENTIFIER() { block }
block: (expression | vardef)*
