// Main entry point
program: (funcdecl)*

// Declares a function
fundecl: func IDENTIFIER () block

// Calls a function
funccall: IDENTIFIER()

// Defines a block of statements
block: { (statement)* }

// Valid statements
statement: (var)? IDENTIFIER (= expr)?
statement: conditional
statement: whileloop
statement: for(statement; expr; statement) block
statement: expression

// While loop
whileloop: while(expr) block

// Conditional
conditional: if(expr) block

// Expressions (this is different from statements in the way that expression "return" values, statements "use" values)
expression: term (+|- term)*

// Terms
term: factor (*|/ factor)*

// Factors (terminals that produce a value)
factor: NUMBER
factor: funccall
factor: (expr)
factor: unary
factor: VARIABLE

// Unary expressions
unary: -|!


